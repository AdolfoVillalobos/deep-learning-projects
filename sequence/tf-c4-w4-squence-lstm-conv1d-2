{
  "nbformat": 4,
  "nbformat_minor": 0,
  "metadata": {
    "accelerator": "GPU",
    "colab": {
      "name": "S+P Week 4 Exercise Question.ipynb",
      "provenance": [],
      "collapsed_sections": [],
      "toc_visible": true
    },
    "kernelspec": {
      "display_name": "Python 3",
      "name": "python3"
    }
  },
  "cells": [
    {
      "cell_type": "code",
      "metadata": {
        "id": "zX4Kg8DUTKWO"
      },
      "source": [
        "#@title Licensed under the Apache License, Version 2.0 (the \"License\");\n",
        "# you may not use this file except in compliance with the License.\n",
        "# You may obtain a copy of the License at\n",
        "#\n",
        "# https://www.apache.org/licenses/LICENSE-2.0\n",
        "#\n",
        "# Unless required by applicable law or agreed to in writing, software\n",
        "# distributed under the License is distributed on an \"AS IS\" BASIS,\n",
        "# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n",
        "# See the License for the specific language governing permissions and\n",
        "# limitations under the License."
      ],
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "56XEQOGknrAk",
        "outputId": "9b50551b-ed95-4c27-c82d-06af5a82f17f"
      },
      "source": [
        "import tensorflow as tf\n",
        "print(tf.__version__)"
      ],
      "execution_count": 1,
      "outputs": [
        {
          "output_type": "stream",
          "text": [
            "2.3.0\n"
          ],
          "name": "stdout"
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "sLl52leVp5wU"
      },
      "source": [
        "import numpy as np\n",
        "import matplotlib.pyplot as plt\n",
        "def plot_series(time, series, format=\"-\", start=0, end=None):\n",
        "    plt.plot(time[start:end], series[start:end], format)\n",
        "    plt.xlabel(\"Time\")\n",
        "    plt.ylabel(\"Value\")\n",
        "    plt.grid(True)"
      ],
      "execution_count": 2,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "tP7oqUdkk0gY",
        "outputId": "c1a0d774-6eec-4a92-f601-0036e6346ecc"
      },
      "source": [
        "!wget --no-check-certificate \\\n",
        "    https://raw.githubusercontent.com/jbrownlee/Datasets/master/daily-min-temperatures.csv \\\n",
        "    -O /tmp/daily-min-temperatures.csv"
      ],
      "execution_count": 3,
      "outputs": [
        {
          "output_type": "stream",
          "text": [
            "--2020-11-24 19:05:44--  https://raw.githubusercontent.com/jbrownlee/Datasets/master/daily-min-temperatures.csv\n",
            "Resolving raw.githubusercontent.com (raw.githubusercontent.com)... 151.101.0.133, 151.101.64.133, 151.101.128.133, ...\n",
            "Connecting to raw.githubusercontent.com (raw.githubusercontent.com)|151.101.0.133|:443... connected.\n",
            "HTTP request sent, awaiting response... 200 OK\n",
            "Length: 67921 (66K) [text/plain]\n",
            "Saving to: ‘/tmp/daily-min-temperatures.csv’\n",
            "\n",
            "\r          /tmp/dail   0%[                    ]       0  --.-KB/s               \r/tmp/daily-min-temp 100%[===================>]  66.33K  --.-KB/s    in 0.002s  \n",
            "\n",
            "2020-11-24 19:05:44 (36.5 MB/s) - ‘/tmp/daily-min-temperatures.csv’ saved [67921/67921]\n",
            "\n"
          ],
          "name": "stdout"
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 388
        },
        "id": "NcG9r1eClbTh",
        "outputId": "7174292f-9316-42f2-9ecb-c8488dbce900"
      },
      "source": [
        "import csv\n",
        "time_step = []\n",
        "temps = []\n",
        "\n",
        "with open('/tmp/daily-min-temperatures.csv') as csvfile:\n",
        "  reader = csv.reader(csvfile, delimiter=\",\")\n",
        "  next(reader)\n",
        "  for i, row in enumerate(reader):\n",
        "    temps.append(float(row[1]))\n",
        "    time_step.append(i)\n",
        "\n",
        "series = np.array(temps)\n",
        "time = np.array(time_step)\n",
        "plt.figure(figsize=(10, 6))\n",
        "plot_series(time, series)"
      ],
      "execution_count": 7,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "image/png": "\n",
            "text/plain": [
              "<Figure size 720x432 with 1 Axes>"
            ]
          },
          "metadata": {
            "tags": [],
            "needs_background": "light"
          }
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "L92YRw_IpCFG"
      },
      "source": [
        "split_time = 2500\n",
        "time_train = np.array(time_step[:split_time])\n",
        "x_train = np.array(temps[:split_time])\n",
        "time_valid = np.array(time_step[split_time:])\n",
        "x_valid = np.array(temps[split_time:])\n",
        "\n",
        "window_size = 30\n",
        "batch_size = 32\n",
        "shuffle_buffer_size = 1000\n"
      ],
      "execution_count": 12,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "lJwUUZscnG38"
      },
      "source": [
        "def windowed_dataset(series, window_size, batch_size, shuffle_buffer):\n",
        "    series  = tf.expand_dims(series, axis=-1)\n",
        "    ds = tf.data.Dataset.from_tensor_slices(series)\n",
        "    ds = ds.window(window_size + 1, shift=1, drop_remainder=True)\n",
        "    ds = ds.flat_map(lambda w: w.batch(window_size + 1))\n",
        "    ds = ds.shuffle(shuffle_buffer)\n",
        "    ds = ds.map(lambda w: (w[:-1], w[1:]))\n",
        "    return ds.batch(batch_size).prefetch(1)"
      ],
      "execution_count": 13,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "ae0pQBR4rP5c"
      },
      "source": [
        "def model_forecast(model, series, window_size):\n",
        "  ds = tf.data.Dataset.from_tensor_slices(series)\n",
        "  ds = ds.window(window_size, shift=1, drop_remainder=True)\n",
        "  ds = ds.flat_map(lambda w: w.batch(window_size))\n",
        "  ds = ds.batch(32).prefetch(1)\n",
        "  forecast = model.predict(ds)\n",
        "  return forecast"
      ],
      "execution_count": 20,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "AclfYY3Mn6Ph",
        "outputId": "d8095898-7a0f-4039-fd0a-c07855bb5098"
      },
      "source": [
        "tf.keras.backend.clear_session()\n",
        "tf.random.set_seed(51)\n",
        "np.random.seed(51)\n",
        "window_size = 64\n",
        "batch_size = 256\n",
        "train_set = windowed_dataset(x_train, window_size, batch_size, shuffle_buffer_size)\n",
        "print(train_set)\n",
        "print(x_train.shape)\n",
        "\n",
        "model = tf.keras.models.Sequential([\n",
        "  tf.keras.layers.Conv1D(filters=60, kernel_size=5, strides=1,\n",
        "                         padding=\"causal\", activation=\"relu\",\n",
        "                         input_shape=[None, 1]\n",
        "                         ),\n",
        "  tf.keras.layers.Bidirectional(tf.keras.layers.LSTM(60, return_sequences=True)),\n",
        "  tf.keras.layers.Bidirectional(tf.keras.layers.LSTM(60)),\n",
        "  tf.keras.layers.Dense(30, activation=\"relu\"),\n",
        "  tf.keras.layers.Dense(10, activation=\"relu\"),\n",
        "  tf.keras.layers.Dense(1),\n",
        "  tf.keras.layers.Lambda(lambda x: x * 400)\n",
        "])\n",
        "\n",
        "lr_schedule = tf.keras.callbacks.LearningRateScheduler(\n",
        "    lambda epoch: 1e-8 * 10**(epoch / 20))\n",
        "optimizer = tf.keras.optimizers.SGD(lr=1e-8, momentum=0.9)\n",
        "model.compile(loss=tf.keras.losses.Huber(),\n",
        "              optimizer=optimizer,\n",
        "              metrics=[\"mae\"])\n",
        "history = model.fit(train_set, epochs=100, callbacks=[lr_schedule])\n"
      ],
      "execution_count": 15,
      "outputs": [
        {
          "output_type": "stream",
          "text": [
            "<PrefetchDataset shapes: ((None, None, 1), (None, None, 1)), types: (tf.float64, tf.float64)>\n",
            "(2500,)\n",
            "Epoch 1/100\n",
            "10/10 [==============================] - 0s 33ms/step - loss: 29.0911 - mae: 29.5897\n",
            "Epoch 2/100\n",
            "10/10 [==============================] - 0s 28ms/step - loss: 27.6041 - mae: 28.1020\n",
            "Epoch 3/100\n",
            "10/10 [==============================] - 0s 28ms/step - loss: 25.4271 - mae: 25.9239\n",
            "Epoch 4/100\n",
            "10/10 [==============================] - 0s 30ms/step - loss: 22.9830 - mae: 23.4780\n",
            "Epoch 5/100\n",
            "10/10 [==============================] - 0s 33ms/step - loss: 20.4908 - mae: 20.9843\n",
            "Epoch 6/100\n",
            "10/10 [==============================] - 0s 26ms/step - loss: 18.1592 - mae: 18.6520\n",
            "Epoch 7/100\n",
            "10/10 [==============================] - 0s 27ms/step - loss: 16.1258 - mae: 16.6183\n",
            "Epoch 8/100\n",
            "10/10 [==============================] - 0s 30ms/step - loss: 14.3665 - mae: 14.8589\n",
            "Epoch 9/100\n",
            "10/10 [==============================] - 0s 35ms/step - loss: 12.9547 - mae: 13.4474\n",
            "Epoch 10/100\n",
            "10/10 [==============================] - 0s 34ms/step - loss: 11.8452 - mae: 12.3380\n",
            "Epoch 11/100\n",
            "10/10 [==============================] - 0s 26ms/step - loss: 10.8988 - mae: 11.3920\n",
            "Epoch 12/100\n",
            "10/10 [==============================] - 0s 34ms/step - loss: 10.2233 - mae: 10.7166\n",
            "Epoch 13/100\n",
            "10/10 [==============================] - 0s 27ms/step - loss: 9.6754 - mae: 10.1679\n",
            "Epoch 14/100\n",
            "10/10 [==============================] - 0s 35ms/step - loss: 9.1809 - mae: 9.6728\n",
            "Epoch 15/100\n",
            "10/10 [==============================] - 0s 37ms/step - loss: 8.6967 - mae: 9.1882\n",
            "Epoch 16/100\n",
            "10/10 [==============================] - 0s 33ms/step - loss: 8.2095 - mae: 8.7005\n",
            "Epoch 17/100\n",
            "10/10 [==============================] - 0s 27ms/step - loss: 7.7101 - mae: 8.2003\n",
            "Epoch 18/100\n",
            "10/10 [==============================] - 0s 30ms/step - loss: 7.2045 - mae: 7.6940\n",
            "Epoch 19/100\n",
            "10/10 [==============================] - 0s 28ms/step - loss: 6.6771 - mae: 7.1653\n",
            "Epoch 20/100\n",
            "10/10 [==============================] - 0s 27ms/step - loss: 6.1268 - mae: 6.6135\n",
            "Epoch 21/100\n",
            "10/10 [==============================] - 0s 28ms/step - loss: 5.5638 - mae: 6.0489\n",
            "Epoch 22/100\n",
            "10/10 [==============================] - 0s 27ms/step - loss: 4.9781 - mae: 5.4610\n",
            "Epoch 23/100\n",
            "10/10 [==============================] - 0s 26ms/step - loss: 4.3966 - mae: 4.8763\n",
            "Epoch 24/100\n",
            "10/10 [==============================] - 0s 27ms/step - loss: 3.8445 - mae: 4.3209\n",
            "Epoch 25/100\n",
            "10/10 [==============================] - 0s 29ms/step - loss: 3.3645 - mae: 3.8365\n",
            "Epoch 26/100\n",
            "10/10 [==============================] - 0s 28ms/step - loss: 2.9953 - mae: 3.4636\n",
            "Epoch 27/100\n",
            "10/10 [==============================] - 0s 30ms/step - loss: 2.7327 - mae: 3.1977\n",
            "Epoch 28/100\n",
            "10/10 [==============================] - 0s 29ms/step - loss: 2.5694 - mae: 3.0323\n",
            "Epoch 29/100\n",
            "10/10 [==============================] - 0s 34ms/step - loss: 2.4838 - mae: 2.9454\n",
            "Epoch 30/100\n",
            "10/10 [==============================] - 0s 30ms/step - loss: 2.4402 - mae: 2.9014\n",
            "Epoch 31/100\n",
            "10/10 [==============================] - 0s 34ms/step - loss: 2.4149 - mae: 2.8761\n",
            "Epoch 32/100\n",
            "10/10 [==============================] - 0s 25ms/step - loss: 2.3850 - mae: 2.8459\n",
            "Epoch 33/100\n",
            "10/10 [==============================] - 0s 26ms/step - loss: 2.3516 - mae: 2.8123\n",
            "Epoch 34/100\n",
            "10/10 [==============================] - 0s 29ms/step - loss: 2.3316 - mae: 2.7921\n",
            "Epoch 35/100\n",
            "10/10 [==============================] - 0s 26ms/step - loss: 2.3073 - mae: 2.7676\n",
            "Epoch 36/100\n",
            "10/10 [==============================] - 0s 28ms/step - loss: 2.2969 - mae: 2.7572\n",
            "Epoch 37/100\n",
            "10/10 [==============================] - 0s 28ms/step - loss: 2.2756 - mae: 2.7353\n",
            "Epoch 38/100\n",
            "10/10 [==============================] - 0s 28ms/step - loss: 2.2558 - mae: 2.7155\n",
            "Epoch 39/100\n",
            "10/10 [==============================] - 0s 35ms/step - loss: 2.2400 - mae: 2.6994\n",
            "Epoch 40/100\n",
            "10/10 [==============================] - 0s 28ms/step - loss: 2.2227 - mae: 2.6821\n",
            "Epoch 41/100\n",
            "10/10 [==============================] - 0s 34ms/step - loss: 2.2092 - mae: 2.6682\n",
            "Epoch 42/100\n",
            "10/10 [==============================] - 0s 30ms/step - loss: 2.1817 - mae: 2.6405\n",
            "Epoch 43/100\n",
            "10/10 [==============================] - 0s 35ms/step - loss: 2.1754 - mae: 2.6341\n",
            "Epoch 44/100\n",
            "10/10 [==============================] - 0s 32ms/step - loss: 2.1464 - mae: 2.6046\n",
            "Epoch 45/100\n",
            "10/10 [==============================] - 0s 37ms/step - loss: 2.1326 - mae: 2.5909\n",
            "Epoch 46/100\n",
            "10/10 [==============================] - 0s 30ms/step - loss: 2.1183 - mae: 2.5760\n",
            "Epoch 47/100\n",
            "10/10 [==============================] - 0s 39ms/step - loss: 2.1137 - mae: 2.5715\n",
            "Epoch 48/100\n",
            "10/10 [==============================] - 0s 28ms/step - loss: 2.0935 - mae: 2.5509\n",
            "Epoch 49/100\n",
            "10/10 [==============================] - 0s 28ms/step - loss: 2.0894 - mae: 2.5467\n",
            "Epoch 50/100\n",
            "10/10 [==============================] - 0s 29ms/step - loss: 2.0723 - mae: 2.5296\n",
            "Epoch 51/100\n",
            "10/10 [==============================] - 0s 36ms/step - loss: 2.0527 - mae: 2.5094\n",
            "Epoch 52/100\n",
            "10/10 [==============================] - 0s 28ms/step - loss: 2.1267 - mae: 2.5850\n",
            "Epoch 53/100\n",
            "10/10 [==============================] - 0s 27ms/step - loss: 2.0399 - mae: 2.4962\n",
            "Epoch 54/100\n",
            "10/10 [==============================] - 0s 28ms/step - loss: 2.0306 - mae: 2.4872\n",
            "Epoch 55/100\n",
            "10/10 [==============================] - 0s 26ms/step - loss: 2.0697 - mae: 2.5274\n",
            "Epoch 56/100\n",
            "10/10 [==============================] - 0s 28ms/step - loss: 2.4163 - mae: 2.8796\n",
            "Epoch 57/100\n",
            "10/10 [==============================] - 0s 26ms/step - loss: 2.7295 - mae: 3.1974\n",
            "Epoch 58/100\n",
            "10/10 [==============================] - 0s 27ms/step - loss: 2.5393 - mae: 3.0041\n",
            "Epoch 59/100\n",
            "10/10 [==============================] - 0s 27ms/step - loss: 2.8302 - mae: 3.2992\n",
            "Epoch 60/100\n",
            "10/10 [==============================] - 0s 27ms/step - loss: 3.3113 - mae: 3.7872\n",
            "Epoch 61/100\n",
            "10/10 [==============================] - 0s 37ms/step - loss: 3.4341 - mae: 3.9117\n",
            "Epoch 62/100\n",
            "10/10 [==============================] - 0s 36ms/step - loss: 3.4184 - mae: 3.8939\n",
            "Epoch 63/100\n",
            "10/10 [==============================] - 0s 29ms/step - loss: 3.7339 - mae: 4.2140\n",
            "Epoch 64/100\n",
            "10/10 [==============================] - 0s 35ms/step - loss: 3.5880 - mae: 4.0650\n",
            "Epoch 65/100\n",
            "10/10 [==============================] - 0s 29ms/step - loss: 3.9619 - mae: 4.4448\n",
            "Epoch 66/100\n",
            "10/10 [==============================] - 0s 28ms/step - loss: 3.3186 - mae: 3.7920\n",
            "Epoch 67/100\n",
            "10/10 [==============================] - 0s 28ms/step - loss: 3.0983 - mae: 3.5696\n",
            "Epoch 68/100\n",
            "10/10 [==============================] - 0s 27ms/step - loss: 2.9762 - mae: 3.4480\n",
            "Epoch 69/100\n",
            "10/10 [==============================] - 0s 27ms/step - loss: 2.9302 - mae: 3.4017\n",
            "Epoch 70/100\n",
            "10/10 [==============================] - 0s 27ms/step - loss: 3.3383 - mae: 3.8159\n",
            "Epoch 71/100\n",
            "10/10 [==============================] - 0s 27ms/step - loss: 3.4305 - mae: 3.9081\n",
            "Epoch 72/100\n",
            "10/10 [==============================] - 0s 29ms/step - loss: 3.9243 - mae: 4.4084\n",
            "Epoch 73/100\n",
            "10/10 [==============================] - 0s 28ms/step - loss: 3.6722 - mae: 4.1516\n",
            "Epoch 74/100\n",
            "10/10 [==============================] - 0s 28ms/step - loss: 4.2916 - mae: 4.7783\n",
            "Epoch 75/100\n",
            "10/10 [==============================] - 0s 33ms/step - loss: 4.2598 - mae: 4.7467\n",
            "Epoch 76/100\n",
            "10/10 [==============================] - 0s 31ms/step - loss: 4.1900 - mae: 4.6761\n",
            "Epoch 77/100\n",
            "10/10 [==============================] - 0s 27ms/step - loss: 4.2252 - mae: 4.7119\n",
            "Epoch 78/100\n",
            "10/10 [==============================] - 0s 28ms/step - loss: 4.0201 - mae: 4.5028\n",
            "Epoch 79/100\n",
            "10/10 [==============================] - 0s 27ms/step - loss: 4.2230 - mae: 4.7078\n",
            "Epoch 80/100\n",
            "10/10 [==============================] - 0s 27ms/step - loss: 3.8724 - mae: 4.3505\n",
            "Epoch 81/100\n",
            "10/10 [==============================] - 0s 38ms/step - loss: 8.4764 - mae: 8.9614\n",
            "Epoch 82/100\n",
            "10/10 [==============================] - 0s 31ms/step - loss: 7.3844 - mae: 7.8769\n",
            "Epoch 83/100\n",
            "10/10 [==============================] - 0s 38ms/step - loss: 7.4864 - mae: 7.9833\n",
            "Epoch 84/100\n",
            "10/10 [==============================] - 0s 37ms/step - loss: 6.4088 - mae: 6.8995\n",
            "Epoch 85/100\n",
            "10/10 [==============================] - 0s 37ms/step - loss: 5.3070 - mae: 5.7889\n",
            "Epoch 86/100\n",
            "10/10 [==============================] - 0s 30ms/step - loss: 16.0702 - mae: 16.5613\n",
            "Epoch 87/100\n",
            "10/10 [==============================] - 0s 29ms/step - loss: 14.4278 - mae: 14.9231\n",
            "Epoch 88/100\n",
            "10/10 [==============================] - 0s 30ms/step - loss: 20.3139 - mae: 20.8136\n",
            "Epoch 89/100\n",
            "10/10 [==============================] - 0s 27ms/step - loss: 25.6191 - mae: 26.1154\n",
            "Epoch 90/100\n",
            "10/10 [==============================] - 0s 32ms/step - loss: 45.4269 - mae: 45.9269\n",
            "Epoch 91/100\n",
            "10/10 [==============================] - 0s 28ms/step - loss: 48.4086 - mae: 48.9084\n",
            "Epoch 92/100\n",
            "10/10 [==============================] - 0s 28ms/step - loss: 48.3573 - mae: 48.8568\n",
            "Epoch 93/100\n",
            "10/10 [==============================] - 0s 27ms/step - loss: 58.3745 - mae: 58.8718\n",
            "Epoch 94/100\n",
            "10/10 [==============================] - 0s 27ms/step - loss: 119.2279 - mae: 119.7273\n",
            "Epoch 95/100\n",
            "10/10 [==============================] - 0s 39ms/step - loss: 66.9283 - mae: 67.4281\n",
            "Epoch 96/100\n",
            "10/10 [==============================] - 0s 32ms/step - loss: 66.5730 - mae: 67.0725\n",
            "Epoch 97/100\n",
            "10/10 [==============================] - 0s 37ms/step - loss: 86.3992 - mae: 86.8986\n",
            "Epoch 98/100\n",
            "10/10 [==============================] - 0s 28ms/step - loss: 79.8448 - mae: 80.3419\n",
            "Epoch 99/100\n",
            "10/10 [==============================] - 0s 29ms/step - loss: 76.5216 - mae: 77.0149\n",
            "Epoch 100/100\n",
            "10/10 [==============================] - 0s 29ms/step - loss: 111.0834 - mae: 111.5781\n"
          ],
          "name": "stdout"
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 290
        },
        "id": "vVcKmg7Q_7rD",
        "outputId": "616f98f9-2dc9-4620-bba5-60d39436b699"
      },
      "source": [
        "plt.semilogx(history.history[\"lr\"], history.history[\"loss\"])\n",
        "plt.axis([1e-8, 1e-4, 0, 60])"
      ],
      "execution_count": 16,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "(1e-08, 0.0001, 0.0, 60.0)"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 16
        },
        {
          "output_type": "display_data",
          "data": {
            "image/png": "\n",
            "text/plain": [
              "<Figure size 432x288 with 1 Axes>"
            ]
          },
          "metadata": {
            "tags": [],
            "needs_background": "light"
          }
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "QsksvkcXAAgq",
        "outputId": "ab92f2d2-04fa-483b-bebc-648d12e25d6e"
      },
      "source": [
        "tf.keras.backend.clear_session()\n",
        "tf.random.set_seed(51)\n",
        "np.random.seed(51)\n",
        "train_set = windowed_dataset(x_train, window_size=60, batch_size=258, shuffle_buffer=shuffle_buffer_size)\n",
        "\n",
        "model = tf.keras.models.Sequential([\n",
        "  tf.keras.layers.Conv1D(filters=60, kernel_size=5, strides=1,\n",
        "                         padding=\"causal\", activation=\"relu\",\n",
        "                         input_shape=[None, 1]\n",
        "                         ),\n",
        "  tf.keras.layers.Bidirectional(tf.keras.layers.LSTM(60, return_sequences=True)),\n",
        "  tf.keras.layers.Bidirectional(tf.keras.layers.LSTM(60)),\n",
        "  tf.keras.layers.Dense(30, activation=\"relu\"),\n",
        "  tf.keras.layers.Dense(10, activation=\"relu\"),\n",
        "  tf.keras.layers.Dense(1),\n",
        "  tf.keras.layers.Lambda(lambda x: x * 400)\n",
        "])\n",
        "\n",
        "\n",
        "\n",
        "optimizer = tf.keras.optimizers.SGD(lr=1e-6, momentum=0.9)\n",
        "model.compile(loss=tf.keras.losses.Huber(),\n",
        "              optimizer=optimizer,\n",
        "              metrics=[\"mae\"])\n",
        "history = model.fit(train_set,epochs=500)\n",
        "                                    \n",
        "# EXPECTED OUTPUT SHOULD SEE AN MAE OF <2 WITHIN ABOUT 30 EPOCHS"
      ],
      "execution_count": 18,
      "outputs": [
        {
          "output_type": "stream",
          "text": [
            "Epoch 1/500\n",
            "10/10 [==============================] - 0s 28ms/step - loss: 18.2758 - mae: 18.7702\n",
            "Epoch 2/500\n",
            "10/10 [==============================] - 0s 28ms/step - loss: 10.1169 - mae: 10.6070\n",
            "Epoch 3/500\n",
            "10/10 [==============================] - 0s 26ms/step - loss: 5.8751 - mae: 6.3580\n",
            "Epoch 4/500\n",
            "10/10 [==============================] - 0s 27ms/step - loss: 3.2729 - mae: 3.7443\n",
            "Epoch 5/500\n",
            "10/10 [==============================] - 0s 25ms/step - loss: 2.6814 - mae: 3.1468\n",
            "Epoch 6/500\n",
            "10/10 [==============================] - 0s 27ms/step - loss: 2.3919 - mae: 2.8533\n",
            "Epoch 7/500\n",
            "10/10 [==============================] - 0s 28ms/step - loss: 2.3044 - mae: 2.7646\n",
            "Epoch 8/500\n",
            "10/10 [==============================] - 0s 29ms/step - loss: 2.2711 - mae: 2.7313\n",
            "Epoch 9/500\n",
            "10/10 [==============================] - 0s 26ms/step - loss: 2.2378 - mae: 2.6969\n",
            "Epoch 10/500\n",
            "10/10 [==============================] - 0s 27ms/step - loss: 2.2296 - mae: 2.6891\n",
            "Epoch 11/500\n",
            "10/10 [==============================] - 0s 29ms/step - loss: 2.2000 - mae: 2.6590\n",
            "Epoch 12/500\n",
            "10/10 [==============================] - 0s 26ms/step - loss: 2.1854 - mae: 2.6442\n",
            "Epoch 13/500\n",
            "10/10 [==============================] - 0s 27ms/step - loss: 2.1721 - mae: 2.6307\n",
            "Epoch 14/500\n",
            "10/10 [==============================] - 0s 27ms/step - loss: 2.1660 - mae: 2.6242\n",
            "Epoch 15/500\n",
            "10/10 [==============================] - 0s 28ms/step - loss: 2.1622 - mae: 2.6206\n",
            "Epoch 16/500\n",
            "10/10 [==============================] - 0s 28ms/step - loss: 2.1584 - mae: 2.6168\n",
            "Epoch 17/500\n",
            "10/10 [==============================] - 0s 28ms/step - loss: 2.1445 - mae: 2.6027\n",
            "Epoch 18/500\n",
            "10/10 [==============================] - 0s 26ms/step - loss: 2.1218 - mae: 2.5797\n",
            "Epoch 19/500\n",
            "10/10 [==============================] - 0s 26ms/step - loss: 2.1117 - mae: 2.5697\n",
            "Epoch 20/500\n",
            "10/10 [==============================] - 0s 26ms/step - loss: 2.1090 - mae: 2.5668\n",
            "Epoch 21/500\n",
            "10/10 [==============================] - 0s 27ms/step - loss: 2.1083 - mae: 2.5661\n",
            "Epoch 22/500\n",
            "10/10 [==============================] - 0s 29ms/step - loss: 2.0939 - mae: 2.5514\n",
            "Epoch 23/500\n",
            "10/10 [==============================] - 0s 28ms/step - loss: 2.0862 - mae: 2.5437\n",
            "Epoch 24/500\n",
            "10/10 [==============================] - 0s 26ms/step - loss: 2.0772 - mae: 2.5344\n",
            "Epoch 25/500\n",
            "10/10 [==============================] - 0s 27ms/step - loss: 2.0713 - mae: 2.5284\n",
            "Epoch 26/500\n",
            "10/10 [==============================] - 0s 26ms/step - loss: 2.0638 - mae: 2.5210\n",
            "Epoch 27/500\n",
            "10/10 [==============================] - 0s 25ms/step - loss: 2.0595 - mae: 2.5163\n",
            "Epoch 28/500\n",
            "10/10 [==============================] - 0s 27ms/step - loss: 2.0546 - mae: 2.5114\n",
            "Epoch 29/500\n",
            "10/10 [==============================] - 0s 29ms/step - loss: 2.0494 - mae: 2.5062\n",
            "Epoch 30/500\n",
            "10/10 [==============================] - 0s 27ms/step - loss: 2.0460 - mae: 2.5027\n",
            "Epoch 31/500\n",
            "10/10 [==============================] - 0s 28ms/step - loss: 2.0436 - mae: 2.5002\n",
            "Epoch 32/500\n",
            "10/10 [==============================] - 0s 28ms/step - loss: 2.0385 - mae: 2.4950\n",
            "Epoch 33/500\n",
            "10/10 [==============================] - 0s 28ms/step - loss: 2.0369 - mae: 2.4934\n",
            "Epoch 34/500\n",
            "10/10 [==============================] - 0s 28ms/step - loss: 2.0301 - mae: 2.4863\n",
            "Epoch 35/500\n",
            "10/10 [==============================] - 0s 28ms/step - loss: 2.0280 - mae: 2.4840\n",
            "Epoch 36/500\n",
            "10/10 [==============================] - 0s 26ms/step - loss: 2.0259 - mae: 2.4821\n",
            "Epoch 37/500\n",
            "10/10 [==============================] - 0s 26ms/step - loss: 2.0240 - mae: 2.4802\n",
            "Epoch 38/500\n",
            "10/10 [==============================] - 0s 28ms/step - loss: 2.0211 - mae: 2.4772\n",
            "Epoch 39/500\n",
            "10/10 [==============================] - 0s 28ms/step - loss: 2.0203 - mae: 2.4766\n",
            "Epoch 40/500\n",
            "10/10 [==============================] - 0s 26ms/step - loss: 2.0120 - mae: 2.4679\n",
            "Epoch 41/500\n",
            "10/10 [==============================] - 0s 27ms/step - loss: 2.0173 - mae: 2.4737\n",
            "Epoch 42/500\n",
            "10/10 [==============================] - 0s 26ms/step - loss: 2.0076 - mae: 2.4635\n",
            "Epoch 43/500\n",
            "10/10 [==============================] - 0s 28ms/step - loss: 2.0014 - mae: 2.4572\n",
            "Epoch 44/500\n",
            "10/10 [==============================] - 0s 27ms/step - loss: 1.9993 - mae: 2.4551\n",
            "Epoch 45/500\n",
            "10/10 [==============================] - 0s 25ms/step - loss: 1.9997 - mae: 2.4552\n",
            "Epoch 46/500\n",
            "10/10 [==============================] - 0s 34ms/step - loss: 1.9992 - mae: 2.4548\n",
            "Epoch 47/500\n",
            "10/10 [==============================] - 0s 27ms/step - loss: 1.9931 - mae: 2.4487\n",
            "Epoch 48/500\n",
            "10/10 [==============================] - 0s 27ms/step - loss: 2.0015 - mae: 2.4575\n",
            "Epoch 49/500\n",
            "10/10 [==============================] - 0s 25ms/step - loss: 1.9863 - mae: 2.4418\n",
            "Epoch 50/500\n",
            "10/10 [==============================] - 0s 26ms/step - loss: 1.9860 - mae: 2.4415\n",
            "Epoch 51/500\n",
            "10/10 [==============================] - 0s 27ms/step - loss: 1.9829 - mae: 2.4383\n",
            "Epoch 52/500\n",
            "10/10 [==============================] - 0s 27ms/step - loss: 1.9804 - mae: 2.4358\n",
            "Epoch 53/500\n",
            "10/10 [==============================] - 0s 29ms/step - loss: 1.9780 - mae: 2.4334\n",
            "Epoch 54/500\n",
            "10/10 [==============================] - 0s 27ms/step - loss: 1.9817 - mae: 2.4372\n",
            "Epoch 55/500\n",
            "10/10 [==============================] - 0s 27ms/step - loss: 1.9731 - mae: 2.4284\n",
            "Epoch 56/500\n",
            "10/10 [==============================] - 0s 27ms/step - loss: 1.9728 - mae: 2.4281\n",
            "Epoch 57/500\n",
            "10/10 [==============================] - 0s 26ms/step - loss: 1.9716 - mae: 2.4267\n",
            "Epoch 58/500\n",
            "10/10 [==============================] - 0s 27ms/step - loss: 1.9696 - mae: 2.4249\n",
            "Epoch 59/500\n",
            "10/10 [==============================] - 0s 27ms/step - loss: 1.9647 - mae: 2.4196\n",
            "Epoch 60/500\n",
            "10/10 [==============================] - 0s 27ms/step - loss: 1.9628 - mae: 2.4179\n",
            "Epoch 61/500\n",
            "10/10 [==============================] - 0s 26ms/step - loss: 1.9625 - mae: 2.4176\n",
            "Epoch 62/500\n",
            "10/10 [==============================] - 0s 28ms/step - loss: 1.9671 - mae: 2.4227\n",
            "Epoch 63/500\n",
            "10/10 [==============================] - 0s 33ms/step - loss: 1.9603 - mae: 2.4155\n",
            "Epoch 64/500\n",
            "10/10 [==============================] - 0s 32ms/step - loss: 1.9562 - mae: 2.4111\n",
            "Epoch 65/500\n",
            "10/10 [==============================] - 0s 27ms/step - loss: 1.9554 - mae: 2.4103\n",
            "Epoch 66/500\n",
            "10/10 [==============================] - 0s 27ms/step - loss: 1.9561 - mae: 2.4112\n",
            "Epoch 67/500\n",
            "10/10 [==============================] - 0s 26ms/step - loss: 1.9526 - mae: 2.4073\n",
            "Epoch 68/500\n",
            "10/10 [==============================] - 0s 27ms/step - loss: 1.9488 - mae: 2.4037\n",
            "Epoch 69/500\n",
            "10/10 [==============================] - 0s 35ms/step - loss: 1.9479 - mae: 2.4027\n",
            "Epoch 70/500\n",
            "10/10 [==============================] - 0s 36ms/step - loss: 1.9486 - mae: 2.4035\n",
            "Epoch 71/500\n",
            "10/10 [==============================] - 0s 27ms/step - loss: 1.9426 - mae: 2.3975\n",
            "Epoch 72/500\n",
            "10/10 [==============================] - 0s 26ms/step - loss: 1.9449 - mae: 2.3998\n",
            "Epoch 73/500\n",
            "10/10 [==============================] - 0s 27ms/step - loss: 1.9429 - mae: 2.3977\n",
            "Epoch 74/500\n",
            "10/10 [==============================] - 0s 28ms/step - loss: 1.9444 - mae: 2.3994\n",
            "Epoch 75/500\n",
            "10/10 [==============================] - 0s 27ms/step - loss: 1.9386 - mae: 2.3932\n",
            "Epoch 76/500\n",
            "10/10 [==============================] - 0s 26ms/step - loss: 1.9351 - mae: 2.3897\n",
            "Epoch 77/500\n",
            "10/10 [==============================] - 0s 27ms/step - loss: 1.9349 - mae: 2.3895\n",
            "Epoch 78/500\n",
            "10/10 [==============================] - 0s 27ms/step - loss: 1.9338 - mae: 2.3883\n",
            "Epoch 79/500\n",
            "10/10 [==============================] - 0s 27ms/step - loss: 1.9318 - mae: 2.3861\n",
            "Epoch 80/500\n",
            "10/10 [==============================] - 0s 25ms/step - loss: 1.9343 - mae: 2.3888\n",
            "Epoch 81/500\n",
            "10/10 [==============================] - 0s 27ms/step - loss: 1.9314 - mae: 2.3859\n",
            "Epoch 82/500\n",
            "10/10 [==============================] - 0s 27ms/step - loss: 1.9334 - mae: 2.3883\n",
            "Epoch 83/500\n",
            "10/10 [==============================] - 0s 26ms/step - loss: 1.9286 - mae: 2.3832\n",
            "Epoch 84/500\n",
            "10/10 [==============================] - 0s 30ms/step - loss: 1.9263 - mae: 2.3808\n",
            "Epoch 85/500\n",
            "10/10 [==============================] - 0s 36ms/step - loss: 1.9294 - mae: 2.3839\n",
            "Epoch 86/500\n",
            "10/10 [==============================] - 0s 31ms/step - loss: 1.9252 - mae: 2.3795\n",
            "Epoch 87/500\n",
            "10/10 [==============================] - 0s 35ms/step - loss: 1.9273 - mae: 2.3820\n",
            "Epoch 88/500\n",
            "10/10 [==============================] - 0s 30ms/step - loss: 1.9264 - mae: 2.3807\n",
            "Epoch 89/500\n",
            "10/10 [==============================] - 0s 27ms/step - loss: 1.9242 - mae: 2.3787\n",
            "Epoch 90/500\n",
            "10/10 [==============================] - 0s 31ms/step - loss: 1.9218 - mae: 2.3761\n",
            "Epoch 91/500\n",
            "10/10 [==============================] - 0s 27ms/step - loss: 1.9201 - mae: 2.3744\n",
            "Epoch 92/500\n",
            "10/10 [==============================] - 0s 31ms/step - loss: 1.9209 - mae: 2.3749\n",
            "Epoch 93/500\n",
            "10/10 [==============================] - 0s 36ms/step - loss: 1.9183 - mae: 2.3726\n",
            "Epoch 94/500\n",
            "10/10 [==============================] - 0s 30ms/step - loss: 1.9160 - mae: 2.3701\n",
            "Epoch 95/500\n",
            "10/10 [==============================] - 0s 27ms/step - loss: 1.9158 - mae: 2.3702\n",
            "Epoch 96/500\n",
            "10/10 [==============================] - 0s 29ms/step - loss: 1.9182 - mae: 2.3726\n",
            "Epoch 97/500\n",
            "10/10 [==============================] - 0s 27ms/step - loss: 1.9205 - mae: 2.3748\n",
            "Epoch 98/500\n",
            "10/10 [==============================] - 0s 27ms/step - loss: 1.9177 - mae: 2.3723\n",
            "Epoch 99/500\n",
            "10/10 [==============================] - 0s 27ms/step - loss: 1.9209 - mae: 2.3754\n",
            "Epoch 100/500\n",
            "10/10 [==============================] - 0s 27ms/step - loss: 1.9158 - mae: 2.3702\n",
            "Epoch 101/500\n",
            "10/10 [==============================] - 0s 28ms/step - loss: 1.9128 - mae: 2.3672\n",
            "Epoch 102/500\n",
            "10/10 [==============================] - 0s 27ms/step - loss: 1.9126 - mae: 2.3667\n",
            "Epoch 103/500\n",
            "10/10 [==============================] - 0s 27ms/step - loss: 1.9078 - mae: 2.3619\n",
            "Epoch 104/500\n",
            "10/10 [==============================] - 0s 28ms/step - loss: 1.9081 - mae: 2.3620\n",
            "Epoch 105/500\n",
            "10/10 [==============================] - 0s 28ms/step - loss: 1.9062 - mae: 2.3602\n",
            "Epoch 106/500\n",
            "10/10 [==============================] - 0s 35ms/step - loss: 1.9055 - mae: 2.3594\n",
            "Epoch 107/500\n",
            "10/10 [==============================] - 0s 32ms/step - loss: 1.9066 - mae: 2.3607\n",
            "Epoch 108/500\n",
            "10/10 [==============================] - 0s 27ms/step - loss: 1.9048 - mae: 2.3590\n",
            "Epoch 109/500\n",
            "10/10 [==============================] - 0s 27ms/step - loss: 1.9052 - mae: 2.3594\n",
            "Epoch 110/500\n",
            "10/10 [==============================] - 0s 26ms/step - loss: 1.9024 - mae: 2.3564\n",
            "Epoch 111/500\n",
            "10/10 [==============================] - 0s 34ms/step - loss: 1.9018 - mae: 2.3558\n",
            "Epoch 112/500\n",
            "10/10 [==============================] - 0s 26ms/step - loss: 1.9010 - mae: 2.3551\n",
            "Epoch 113/500\n",
            "10/10 [==============================] - 0s 25ms/step - loss: 1.9003 - mae: 2.3543\n",
            "Epoch 114/500\n",
            "10/10 [==============================] - 0s 28ms/step - loss: 1.8996 - mae: 2.3537\n",
            "Epoch 115/500\n",
            "10/10 [==============================] - 0s 29ms/step - loss: 1.8982 - mae: 2.3521\n",
            "Epoch 116/500\n",
            "10/10 [==============================] - 0s 28ms/step - loss: 1.9013 - mae: 2.3552\n",
            "Epoch 117/500\n",
            "10/10 [==============================] - 0s 26ms/step - loss: 1.8967 - mae: 2.3506\n",
            "Epoch 118/500\n",
            "10/10 [==============================] - 0s 26ms/step - loss: 1.9001 - mae: 2.3541\n",
            "Epoch 119/500\n",
            "10/10 [==============================] - 0s 26ms/step - loss: 1.8980 - mae: 2.3519\n",
            "Epoch 120/500\n",
            "10/10 [==============================] - 0s 28ms/step - loss: 1.8975 - mae: 2.3515\n",
            "Epoch 121/500\n",
            "10/10 [==============================] - 0s 27ms/step - loss: 1.8964 - mae: 2.3504\n",
            "Epoch 122/500\n",
            "10/10 [==============================] - 0s 28ms/step - loss: 1.8972 - mae: 2.3509\n",
            "Epoch 123/500\n",
            "10/10 [==============================] - 0s 36ms/step - loss: 1.8948 - mae: 2.3485\n",
            "Epoch 124/500\n",
            "10/10 [==============================] - 0s 34ms/step - loss: 1.8925 - mae: 2.3462\n",
            "Epoch 125/500\n",
            "10/10 [==============================] - 0s 28ms/step - loss: 1.8931 - mae: 2.3470\n",
            "Epoch 126/500\n",
            "10/10 [==============================] - 0s 28ms/step - loss: 1.8918 - mae: 2.3457\n",
            "Epoch 127/500\n",
            "10/10 [==============================] - 0s 29ms/step - loss: 1.8937 - mae: 2.3476\n",
            "Epoch 128/500\n",
            "10/10 [==============================] - 0s 26ms/step - loss: 1.8925 - mae: 2.3463\n",
            "Epoch 129/500\n",
            "10/10 [==============================] - 0s 27ms/step - loss: 1.8897 - mae: 2.3435\n",
            "Epoch 130/500\n",
            "10/10 [==============================] - 0s 28ms/step - loss: 1.8909 - mae: 2.3448\n",
            "Epoch 131/500\n",
            "10/10 [==============================] - 0s 26ms/step - loss: 1.8878 - mae: 2.3415\n",
            "Epoch 132/500\n",
            "10/10 [==============================] - 0s 28ms/step - loss: 1.8877 - mae: 2.3415\n",
            "Epoch 133/500\n",
            "10/10 [==============================] - 0s 35ms/step - loss: 1.8870 - mae: 2.3407\n",
            "Epoch 134/500\n",
            "10/10 [==============================] - 0s 28ms/step - loss: 1.8875 - mae: 2.3413\n",
            "Epoch 135/500\n",
            "10/10 [==============================] - 0s 27ms/step - loss: 1.8900 - mae: 2.3438\n",
            "Epoch 136/500\n",
            "10/10 [==============================] - 0s 29ms/step - loss: 1.8854 - mae: 2.3390\n",
            "Epoch 137/500\n",
            "10/10 [==============================] - 0s 27ms/step - loss: 1.8883 - mae: 2.3418\n",
            "Epoch 138/500\n",
            "10/10 [==============================] - 0s 26ms/step - loss: 1.8841 - mae: 2.3378\n",
            "Epoch 139/500\n",
            "10/10 [==============================] - 0s 27ms/step - loss: 1.8874 - mae: 2.3409\n",
            "Epoch 140/500\n",
            "10/10 [==============================] - 0s 27ms/step - loss: 1.8857 - mae: 2.3393\n",
            "Epoch 141/500\n",
            "10/10 [==============================] - 0s 27ms/step - loss: 1.8855 - mae: 2.3392\n",
            "Epoch 142/500\n",
            "10/10 [==============================] - 0s 27ms/step - loss: 1.8886 - mae: 2.3422\n",
            "Epoch 143/500\n",
            "10/10 [==============================] - 0s 27ms/step - loss: 1.8843 - mae: 2.3380\n",
            "Epoch 144/500\n",
            "10/10 [==============================] - 0s 27ms/step - loss: 1.8835 - mae: 2.3371\n",
            "Epoch 145/500\n",
            "10/10 [==============================] - 0s 28ms/step - loss: 1.8805 - mae: 2.3339\n",
            "Epoch 146/500\n",
            "10/10 [==============================] - 0s 26ms/step - loss: 1.8797 - mae: 2.3332\n",
            "Epoch 147/500\n",
            "10/10 [==============================] - 0s 27ms/step - loss: 1.8792 - mae: 2.3325\n",
            "Epoch 148/500\n",
            "10/10 [==============================] - 0s 27ms/step - loss: 1.8818 - mae: 2.3352\n",
            "Epoch 149/500\n",
            "10/10 [==============================] - 0s 27ms/step - loss: 1.8816 - mae: 2.3352\n",
            "Epoch 150/500\n",
            "10/10 [==============================] - 0s 26ms/step - loss: 1.8837 - mae: 2.3374\n",
            "Epoch 151/500\n",
            "10/10 [==============================] - 0s 27ms/step - loss: 1.8787 - mae: 2.3320\n",
            "Epoch 152/500\n",
            "10/10 [==============================] - 0s 28ms/step - loss: 1.8769 - mae: 2.3302\n",
            "Epoch 153/500\n",
            "10/10 [==============================] - 0s 28ms/step - loss: 1.8762 - mae: 2.3296\n",
            "Epoch 154/500\n",
            "10/10 [==============================] - 0s 26ms/step - loss: 1.8757 - mae: 2.3289\n",
            "Epoch 155/500\n",
            "10/10 [==============================] - 0s 27ms/step - loss: 1.8754 - mae: 2.3286\n",
            "Epoch 156/500\n",
            "10/10 [==============================] - 0s 28ms/step - loss: 1.8752 - mae: 2.3286\n",
            "Epoch 157/500\n",
            "10/10 [==============================] - 0s 27ms/step - loss: 1.8759 - mae: 2.3293\n",
            "Epoch 158/500\n",
            "10/10 [==============================] - 0s 26ms/step - loss: 1.8737 - mae: 2.3270\n",
            "Epoch 159/500\n",
            "10/10 [==============================] - 0s 27ms/step - loss: 1.8732 - mae: 2.3264\n",
            "Epoch 160/500\n",
            "10/10 [==============================] - 0s 28ms/step - loss: 1.8733 - mae: 2.3265\n",
            "Epoch 161/500\n",
            "10/10 [==============================] - 0s 27ms/step - loss: 1.8736 - mae: 2.3268\n",
            "Epoch 162/500\n",
            "10/10 [==============================] - 0s 27ms/step - loss: 1.8726 - mae: 2.3259\n",
            "Epoch 163/500\n",
            "10/10 [==============================] - 0s 27ms/step - loss: 1.8754 - mae: 2.3287\n",
            "Epoch 164/500\n",
            "10/10 [==============================] - 0s 26ms/step - loss: 1.8721 - mae: 2.3254\n",
            "Epoch 165/500\n",
            "10/10 [==============================] - 0s 31ms/step - loss: 1.8712 - mae: 2.3244\n",
            "Epoch 166/500\n",
            "10/10 [==============================] - 0s 28ms/step - loss: 1.8731 - mae: 2.3263\n",
            "Epoch 167/500\n",
            "10/10 [==============================] - 0s 29ms/step - loss: 1.8696 - mae: 2.3229\n",
            "Epoch 168/500\n",
            "10/10 [==============================] - 0s 30ms/step - loss: 1.8722 - mae: 2.3255\n",
            "Epoch 169/500\n",
            "10/10 [==============================] - 0s 28ms/step - loss: 1.8702 - mae: 2.3235\n",
            "Epoch 170/500\n",
            "10/10 [==============================] - 0s 28ms/step - loss: 1.8704 - mae: 2.3237\n",
            "Epoch 171/500\n",
            "10/10 [==============================] - 0s 27ms/step - loss: 1.8706 - mae: 2.3240\n",
            "Epoch 172/500\n",
            "10/10 [==============================] - 0s 30ms/step - loss: 1.8743 - mae: 2.3277\n",
            "Epoch 173/500\n",
            "10/10 [==============================] - 0s 26ms/step - loss: 1.8706 - mae: 2.3238\n",
            "Epoch 174/500\n",
            "10/10 [==============================] - 0s 27ms/step - loss: 1.8687 - mae: 2.3219\n",
            "Epoch 175/500\n",
            "10/10 [==============================] - 0s 27ms/step - loss: 1.8689 - mae: 2.3221\n",
            "Epoch 176/500\n",
            "10/10 [==============================] - 0s 29ms/step - loss: 1.8668 - mae: 2.3200\n",
            "Epoch 177/500\n",
            "10/10 [==============================] - 0s 32ms/step - loss: 1.8678 - mae: 2.3210\n",
            "Epoch 178/500\n",
            "10/10 [==============================] - 0s 31ms/step - loss: 1.8677 - mae: 2.3208\n",
            "Epoch 179/500\n",
            "10/10 [==============================] - 0s 28ms/step - loss: 1.8662 - mae: 2.3193\n",
            "Epoch 180/500\n",
            "10/10 [==============================] - 0s 27ms/step - loss: 1.8660 - mae: 2.3191\n",
            "Epoch 181/500\n",
            "10/10 [==============================] - 0s 29ms/step - loss: 1.8652 - mae: 2.3182\n",
            "Epoch 182/500\n",
            "10/10 [==============================] - 0s 27ms/step - loss: 1.8650 - mae: 2.3181\n",
            "Epoch 183/500\n",
            "10/10 [==============================] - 0s 28ms/step - loss: 1.8649 - mae: 2.3180\n",
            "Epoch 184/500\n",
            "10/10 [==============================] - 0s 27ms/step - loss: 1.8650 - mae: 2.3179\n",
            "Epoch 185/500\n",
            "10/10 [==============================] - 0s 28ms/step - loss: 1.8635 - mae: 2.3166\n",
            "Epoch 186/500\n",
            "10/10 [==============================] - 0s 28ms/step - loss: 1.8688 - mae: 2.3219\n",
            "Epoch 187/500\n",
            "10/10 [==============================] - 0s 27ms/step - loss: 1.8639 - mae: 2.3170\n",
            "Epoch 188/500\n",
            "10/10 [==============================] - 0s 38ms/step - loss: 1.8637 - mae: 2.3166\n",
            "Epoch 189/500\n",
            "10/10 [==============================] - 0s 29ms/step - loss: 1.8700 - mae: 2.3232\n",
            "Epoch 190/500\n",
            "10/10 [==============================] - 0s 27ms/step - loss: 1.8653 - mae: 2.3186\n",
            "Epoch 191/500\n",
            "10/10 [==============================] - 0s 27ms/step - loss: 1.8654 - mae: 2.3185\n",
            "Epoch 192/500\n",
            "10/10 [==============================] - 0s 33ms/step - loss: 1.8651 - mae: 2.3180\n",
            "Epoch 193/500\n",
            "10/10 [==============================] - 0s 32ms/step - loss: 1.8633 - mae: 2.3164\n",
            "Epoch 194/500\n",
            "10/10 [==============================] - 0s 28ms/step - loss: 1.8648 - mae: 2.3178\n",
            "Epoch 195/500\n",
            "10/10 [==============================] - 0s 26ms/step - loss: 1.8617 - mae: 2.3148\n",
            "Epoch 196/500\n",
            "10/10 [==============================] - 0s 27ms/step - loss: 1.8633 - mae: 2.3165\n",
            "Epoch 197/500\n",
            "10/10 [==============================] - 0s 28ms/step - loss: 1.8652 - mae: 2.3180\n",
            "Epoch 198/500\n",
            "10/10 [==============================] - 0s 27ms/step - loss: 1.8614 - mae: 2.3144\n",
            "Epoch 199/500\n",
            "10/10 [==============================] - 0s 27ms/step - loss: 1.8607 - mae: 2.3135\n",
            "Epoch 200/500\n",
            "10/10 [==============================] - 0s 27ms/step - loss: 1.8602 - mae: 2.3132\n",
            "Epoch 201/500\n",
            "10/10 [==============================] - 0s 29ms/step - loss: 1.8611 - mae: 2.3140\n",
            "Epoch 202/500\n",
            "10/10 [==============================] - 0s 32ms/step - loss: 1.8599 - mae: 2.3128\n",
            "Epoch 203/500\n",
            "10/10 [==============================] - 0s 35ms/step - loss: 1.8597 - mae: 2.3125\n",
            "Epoch 204/500\n",
            "10/10 [==============================] - 0s 28ms/step - loss: 1.8593 - mae: 2.3122\n",
            "Epoch 205/500\n",
            "10/10 [==============================] - 0s 28ms/step - loss: 1.8583 - mae: 2.3112\n",
            "Epoch 206/500\n",
            "10/10 [==============================] - 0s 29ms/step - loss: 1.8589 - mae: 2.3118\n",
            "Epoch 207/500\n",
            "10/10 [==============================] - 0s 27ms/step - loss: 1.8582 - mae: 2.3112\n",
            "Epoch 208/500\n",
            "10/10 [==============================] - 0s 27ms/step - loss: 1.8576 - mae: 2.3106\n",
            "Epoch 209/500\n",
            "10/10 [==============================] - 0s 28ms/step - loss: 1.8602 - mae: 2.3131\n",
            "Epoch 210/500\n",
            "10/10 [==============================] - 0s 27ms/step - loss: 1.8581 - mae: 2.3110\n",
            "Epoch 211/500\n",
            "10/10 [==============================] - 0s 25ms/step - loss: 1.8568 - mae: 2.3097\n",
            "Epoch 212/500\n",
            "10/10 [==============================] - 0s 27ms/step - loss: 1.8577 - mae: 2.3107\n",
            "Epoch 213/500\n",
            "10/10 [==============================] - 0s 31ms/step - loss: 1.8567 - mae: 2.3097\n",
            "Epoch 214/500\n",
            "10/10 [==============================] - 0s 29ms/step - loss: 1.8560 - mae: 2.3090\n",
            "Epoch 215/500\n",
            "10/10 [==============================] - 0s 28ms/step - loss: 1.8591 - mae: 2.3121\n",
            "Epoch 216/500\n",
            "10/10 [==============================] - 0s 28ms/step - loss: 1.8568 - mae: 2.3097\n",
            "Epoch 217/500\n",
            "10/10 [==============================] - 0s 28ms/step - loss: 1.8564 - mae: 2.3093\n",
            "Epoch 218/500\n",
            "10/10 [==============================] - 0s 27ms/step - loss: 1.8553 - mae: 2.3082\n",
            "Epoch 219/500\n",
            "10/10 [==============================] - 0s 29ms/step - loss: 1.8564 - mae: 2.3092\n",
            "Epoch 220/500\n",
            "10/10 [==============================] - 0s 27ms/step - loss: 1.8547 - mae: 2.3075\n",
            "Epoch 221/500\n",
            "10/10 [==============================] - 0s 36ms/step - loss: 1.8555 - mae: 2.3083\n",
            "Epoch 222/500\n",
            "10/10 [==============================] - 0s 27ms/step - loss: 1.8550 - mae: 2.3078\n",
            "Epoch 223/500\n",
            "10/10 [==============================] - 0s 28ms/step - loss: 1.8541 - mae: 2.3070\n",
            "Epoch 224/500\n",
            "10/10 [==============================] - 0s 29ms/step - loss: 1.8544 - mae: 2.3072\n",
            "Epoch 225/500\n",
            "10/10 [==============================] - 0s 29ms/step - loss: 1.8536 - mae: 2.3065\n",
            "Epoch 226/500\n",
            "10/10 [==============================] - 0s 30ms/step - loss: 1.8557 - mae: 2.3086\n",
            "Epoch 227/500\n",
            "10/10 [==============================] - 0s 28ms/step - loss: 1.8560 - mae: 2.3089\n",
            "Epoch 228/500\n",
            "10/10 [==============================] - 0s 28ms/step - loss: 1.8545 - mae: 2.3072\n",
            "Epoch 229/500\n",
            "10/10 [==============================] - 0s 28ms/step - loss: 1.8558 - mae: 2.3087\n",
            "Epoch 230/500\n",
            "10/10 [==============================] - 0s 30ms/step - loss: 1.8556 - mae: 2.3085\n",
            "Epoch 231/500\n",
            "10/10 [==============================] - 0s 28ms/step - loss: 1.8525 - mae: 2.3053\n",
            "Epoch 232/500\n",
            "10/10 [==============================] - 0s 26ms/step - loss: 1.8520 - mae: 2.3047\n",
            "Epoch 233/500\n",
            "10/10 [==============================] - 0s 28ms/step - loss: 1.8524 - mae: 2.3052\n",
            "Epoch 234/500\n",
            "10/10 [==============================] - 0s 28ms/step - loss: 1.8530 - mae: 2.3058\n",
            "Epoch 235/500\n",
            "10/10 [==============================] - 0s 27ms/step - loss: 1.8514 - mae: 2.3042\n",
            "Epoch 236/500\n",
            "10/10 [==============================] - 0s 30ms/step - loss: 1.8541 - mae: 2.3070\n",
            "Epoch 237/500\n",
            "10/10 [==============================] - 0s 32ms/step - loss: 1.8531 - mae: 2.3059\n",
            "Epoch 238/500\n",
            "10/10 [==============================] - 0s 36ms/step - loss: 1.8518 - mae: 2.3047\n",
            "Epoch 239/500\n",
            "10/10 [==============================] - 0s 27ms/step - loss: 1.8539 - mae: 2.3067\n",
            "Epoch 240/500\n",
            "10/10 [==============================] - 0s 28ms/step - loss: 1.8504 - mae: 2.3032\n",
            "Epoch 241/500\n",
            "10/10 [==============================] - 0s 29ms/step - loss: 1.8516 - mae: 2.3044\n",
            "Epoch 242/500\n",
            "10/10 [==============================] - 0s 27ms/step - loss: 1.8506 - mae: 2.3033\n",
            "Epoch 243/500\n",
            "10/10 [==============================] - 0s 27ms/step - loss: 1.8513 - mae: 2.3040\n",
            "Epoch 244/500\n",
            "10/10 [==============================] - 0s 27ms/step - loss: 1.8497 - mae: 2.3025\n",
            "Epoch 245/500\n",
            "10/10 [==============================] - 0s 26ms/step - loss: 1.8510 - mae: 2.3038\n",
            "Epoch 246/500\n",
            "10/10 [==============================] - 0s 27ms/step - loss: 1.8529 - mae: 2.3059\n",
            "Epoch 247/500\n",
            "10/10 [==============================] - 0s 29ms/step - loss: 1.8500 - mae: 2.3028\n",
            "Epoch 248/500\n",
            "10/10 [==============================] - 0s 32ms/step - loss: 1.8497 - mae: 2.3024\n",
            "Epoch 249/500\n",
            "10/10 [==============================] - 0s 37ms/step - loss: 1.8490 - mae: 2.3018\n",
            "Epoch 250/500\n",
            "10/10 [==============================] - 0s 27ms/step - loss: 1.8496 - mae: 2.3023\n",
            "Epoch 251/500\n",
            "10/10 [==============================] - 0s 27ms/step - loss: 1.8494 - mae: 2.3020\n",
            "Epoch 252/500\n",
            "10/10 [==============================] - 0s 27ms/step - loss: 1.8488 - mae: 2.3014\n",
            "Epoch 253/500\n",
            "10/10 [==============================] - 0s 39ms/step - loss: 1.8487 - mae: 2.3012\n",
            "Epoch 254/500\n",
            "10/10 [==============================] - 0s 27ms/step - loss: 1.8480 - mae: 2.3007\n",
            "Epoch 255/500\n",
            "10/10 [==============================] - 0s 29ms/step - loss: 1.8498 - mae: 2.3026\n",
            "Epoch 256/500\n",
            "10/10 [==============================] - 0s 27ms/step - loss: 1.8523 - mae: 2.3051\n",
            "Epoch 257/500\n",
            "10/10 [==============================] - 0s 29ms/step - loss: 1.8496 - mae: 2.3024\n",
            "Epoch 258/500\n",
            "10/10 [==============================] - 0s 34ms/step - loss: 1.8490 - mae: 2.3016\n",
            "Epoch 259/500\n",
            "10/10 [==============================] - 0s 35ms/step - loss: 1.8474 - mae: 2.3002\n",
            "Epoch 260/500\n",
            "10/10 [==============================] - 0s 28ms/step - loss: 1.8480 - mae: 2.3007\n",
            "Epoch 261/500\n",
            "10/10 [==============================] - 0s 28ms/step - loss: 1.8470 - mae: 2.2998\n",
            "Epoch 262/500\n",
            "10/10 [==============================] - 0s 27ms/step - loss: 1.8469 - mae: 2.2996\n",
            "Epoch 263/500\n",
            "10/10 [==============================] - 0s 29ms/step - loss: 1.8475 - mae: 2.3001\n",
            "Epoch 264/500\n",
            "10/10 [==============================] - 0s 35ms/step - loss: 1.8476 - mae: 2.3004\n",
            "Epoch 265/500\n",
            "10/10 [==============================] - 0s 34ms/step - loss: 1.8527 - mae: 2.3057\n",
            "Epoch 266/500\n",
            "10/10 [==============================] - 0s 33ms/step - loss: 1.8468 - mae: 2.2995\n",
            "Epoch 267/500\n",
            "10/10 [==============================] - 0s 28ms/step - loss: 1.8476 - mae: 2.3003\n",
            "Epoch 268/500\n",
            "10/10 [==============================] - 0s 31ms/step - loss: 1.8454 - mae: 2.2981\n",
            "Epoch 269/500\n",
            "10/10 [==============================] - 0s 27ms/step - loss: 1.8467 - mae: 2.2994\n",
            "Epoch 270/500\n",
            "10/10 [==============================] - 0s 29ms/step - loss: 1.8466 - mae: 2.2992\n",
            "Epoch 271/500\n",
            "10/10 [==============================] - 0s 26ms/step - loss: 1.8478 - mae: 2.3006\n",
            "Epoch 272/500\n",
            "10/10 [==============================] - 0s 28ms/step - loss: 1.8503 - mae: 2.3031\n",
            "Epoch 273/500\n",
            "10/10 [==============================] - 0s 26ms/step - loss: 1.8454 - mae: 2.2982\n",
            "Epoch 274/500\n",
            "10/10 [==============================] - 0s 27ms/step - loss: 1.8451 - mae: 2.2978\n",
            "Epoch 275/500\n",
            "10/10 [==============================] - 0s 27ms/step - loss: 1.8445 - mae: 2.2971\n",
            "Epoch 276/500\n",
            "10/10 [==============================] - 0s 29ms/step - loss: 1.8476 - mae: 2.3002\n",
            "Epoch 277/500\n",
            "10/10 [==============================] - 0s 26ms/step - loss: 1.8471 - mae: 2.3000\n",
            "Epoch 278/500\n",
            "10/10 [==============================] - 0s 28ms/step - loss: 1.8472 - mae: 2.2997\n",
            "Epoch 279/500\n",
            "10/10 [==============================] - 0s 33ms/step - loss: 1.8443 - mae: 2.2967\n",
            "Epoch 280/500\n",
            "10/10 [==============================] - 0s 37ms/step - loss: 1.8436 - mae: 2.2961\n",
            "Epoch 281/500\n",
            "10/10 [==============================] - 0s 27ms/step - loss: 1.8436 - mae: 2.2963\n",
            "Epoch 282/500\n",
            "10/10 [==============================] - 0s 29ms/step - loss: 1.8476 - mae: 2.3004\n",
            "Epoch 283/500\n",
            "10/10 [==============================] - 0s 28ms/step - loss: 1.8443 - mae: 2.2969\n",
            "Epoch 284/500\n",
            "10/10 [==============================] - 0s 26ms/step - loss: 1.8437 - mae: 2.2963\n",
            "Epoch 285/500\n",
            "10/10 [==============================] - 0s 26ms/step - loss: 1.8434 - mae: 2.2961\n",
            "Epoch 286/500\n",
            "10/10 [==============================] - 0s 26ms/step - loss: 1.8427 - mae: 2.2953\n",
            "Epoch 287/500\n",
            "10/10 [==============================] - 0s 28ms/step - loss: 1.8442 - mae: 2.2968\n",
            "Epoch 288/500\n",
            "10/10 [==============================] - 0s 28ms/step - loss: 1.8435 - mae: 2.2961\n",
            "Epoch 289/500\n",
            "10/10 [==============================] - 0s 30ms/step - loss: 1.8446 - mae: 2.2974\n",
            "Epoch 290/500\n",
            "10/10 [==============================] - 0s 30ms/step - loss: 1.8437 - mae: 2.2962\n",
            "Epoch 291/500\n",
            "10/10 [==============================] - 0s 28ms/step - loss: 1.8417 - mae: 2.2942\n",
            "Epoch 292/500\n",
            "10/10 [==============================] - 0s 31ms/step - loss: 1.8415 - mae: 2.2940\n",
            "Epoch 293/500\n",
            "10/10 [==============================] - 0s 28ms/step - loss: 1.8421 - mae: 2.2946\n",
            "Epoch 294/500\n",
            "10/10 [==============================] - 0s 30ms/step - loss: 1.8414 - mae: 2.2940\n",
            "Epoch 295/500\n",
            "10/10 [==============================] - 0s 28ms/step - loss: 1.8435 - mae: 2.2961\n",
            "Epoch 296/500\n",
            "10/10 [==============================] - 0s 28ms/step - loss: 1.8409 - mae: 2.2934\n",
            "Epoch 297/500\n",
            "10/10 [==============================] - 0s 27ms/step - loss: 1.8414 - mae: 2.2940\n",
            "Epoch 298/500\n",
            "10/10 [==============================] - 0s 28ms/step - loss: 1.8406 - mae: 2.2930\n",
            "Epoch 299/500\n",
            "10/10 [==============================] - 0s 26ms/step - loss: 1.8419 - mae: 2.2944\n",
            "Epoch 300/500\n",
            "10/10 [==============================] - 0s 26ms/step - loss: 1.8406 - mae: 2.2931\n",
            "Epoch 301/500\n",
            "10/10 [==============================] - 0s 29ms/step - loss: 1.8405 - mae: 2.2931\n",
            "Epoch 302/500\n",
            "10/10 [==============================] - 0s 27ms/step - loss: 1.8412 - mae: 2.2938\n",
            "Epoch 303/500\n",
            "10/10 [==============================] - 0s 28ms/step - loss: 1.8410 - mae: 2.2937\n",
            "Epoch 304/500\n",
            "10/10 [==============================] - 0s 27ms/step - loss: 1.8407 - mae: 2.2931\n",
            "Epoch 305/500\n",
            "10/10 [==============================] - 0s 27ms/step - loss: 1.8403 - mae: 2.2927\n",
            "Epoch 306/500\n",
            "10/10 [==============================] - 0s 35ms/step - loss: 1.8416 - mae: 2.2942\n",
            "Epoch 307/500\n",
            "10/10 [==============================] - 0s 27ms/step - loss: 1.8412 - mae: 2.2939\n",
            "Epoch 308/500\n",
            "10/10 [==============================] - 0s 38ms/step - loss: 1.8441 - mae: 2.2969\n",
            "Epoch 309/500\n",
            "10/10 [==============================] - 0s 33ms/step - loss: 1.8437 - mae: 2.2962\n",
            "Epoch 310/500\n",
            "10/10 [==============================] - 0s 27ms/step - loss: 1.8402 - mae: 2.2927\n",
            "Epoch 311/500\n",
            "10/10 [==============================] - 0s 27ms/step - loss: 1.8425 - mae: 2.2950\n",
            "Epoch 312/500\n",
            "10/10 [==============================] - 0s 28ms/step - loss: 1.8390 - mae: 2.2915\n",
            "Epoch 313/500\n",
            "10/10 [==============================] - 0s 28ms/step - loss: 1.8400 - mae: 2.2926\n",
            "Epoch 314/500\n",
            "10/10 [==============================] - 0s 27ms/step - loss: 1.8394 - mae: 2.2919\n",
            "Epoch 315/500\n",
            "10/10 [==============================] - 0s 26ms/step - loss: 1.8385 - mae: 2.2910\n",
            "Epoch 316/500\n",
            "10/10 [==============================] - 0s 31ms/step - loss: 1.8395 - mae: 2.2921\n",
            "Epoch 317/500\n",
            "10/10 [==============================] - 0s 35ms/step - loss: 1.8383 - mae: 2.2908\n",
            "Epoch 318/500\n",
            "10/10 [==============================] - 0s 30ms/step - loss: 1.8390 - mae: 2.2914\n",
            "Epoch 319/500\n",
            "10/10 [==============================] - 0s 30ms/step - loss: 1.8380 - mae: 2.2903\n",
            "Epoch 320/500\n",
            "10/10 [==============================] - 0s 30ms/step - loss: 1.8391 - mae: 2.2915\n",
            "Epoch 321/500\n",
            "10/10 [==============================] - 0s 26ms/step - loss: 1.8396 - mae: 2.2922\n",
            "Epoch 322/500\n",
            "10/10 [==============================] - 0s 29ms/step - loss: 1.8382 - mae: 2.2908\n",
            "Epoch 323/500\n",
            "10/10 [==============================] - 0s 36ms/step - loss: 1.8386 - mae: 2.2910\n",
            "Epoch 324/500\n",
            "10/10 [==============================] - 0s 28ms/step - loss: 1.8395 - mae: 2.2921\n",
            "Epoch 325/500\n",
            "10/10 [==============================] - 0s 28ms/step - loss: 1.8382 - mae: 2.2907\n",
            "Epoch 326/500\n",
            "10/10 [==============================] - 0s 27ms/step - loss: 1.8384 - mae: 2.2906\n",
            "Epoch 327/500\n",
            "10/10 [==============================] - 0s 27ms/step - loss: 1.8370 - mae: 2.2894\n",
            "Epoch 328/500\n",
            "10/10 [==============================] - 0s 28ms/step - loss: 1.8375 - mae: 2.2900\n",
            "Epoch 329/500\n",
            "10/10 [==============================] - 0s 27ms/step - loss: 1.8373 - mae: 2.2897\n",
            "Epoch 330/500\n",
            "10/10 [==============================] - 0s 26ms/step - loss: 1.8373 - mae: 2.2896\n",
            "Epoch 331/500\n",
            "10/10 [==============================] - 0s 29ms/step - loss: 1.8375 - mae: 2.2899\n",
            "Epoch 332/500\n",
            "10/10 [==============================] - 0s 28ms/step - loss: 1.8364 - mae: 2.2888\n",
            "Epoch 333/500\n",
            "10/10 [==============================] - 0s 28ms/step - loss: 1.8374 - mae: 2.2899\n",
            "Epoch 334/500\n",
            "10/10 [==============================] - 0s 27ms/step - loss: 1.8367 - mae: 2.2891\n",
            "Epoch 335/500\n",
            "10/10 [==============================] - 0s 31ms/step - loss: 1.8361 - mae: 2.2885\n",
            "Epoch 336/500\n",
            "10/10 [==============================] - 0s 27ms/step - loss: 1.8378 - mae: 2.2903\n",
            "Epoch 337/500\n",
            "10/10 [==============================] - 0s 28ms/step - loss: 1.8362 - mae: 2.2887\n",
            "Epoch 338/500\n",
            "10/10 [==============================] - 0s 28ms/step - loss: 1.8360 - mae: 2.2884\n",
            "Epoch 339/500\n",
            "10/10 [==============================] - 0s 34ms/step - loss: 1.8370 - mae: 2.2894\n",
            "Epoch 340/500\n",
            "10/10 [==============================] - 0s 27ms/step - loss: 1.8356 - mae: 2.2881\n",
            "Epoch 341/500\n",
            "10/10 [==============================] - 0s 28ms/step - loss: 1.8367 - mae: 2.2892\n",
            "Epoch 342/500\n",
            "10/10 [==============================] - 0s 27ms/step - loss: 1.8367 - mae: 2.2891\n",
            "Epoch 343/500\n",
            "10/10 [==============================] - 0s 25ms/step - loss: 1.8350 - mae: 2.2874\n",
            "Epoch 344/500\n",
            "10/10 [==============================] - 0s 29ms/step - loss: 1.8352 - mae: 2.2876\n",
            "Epoch 345/500\n",
            "10/10 [==============================] - 0s 36ms/step - loss: 1.8350 - mae: 2.2874\n",
            "Epoch 346/500\n",
            "10/10 [==============================] - 0s 31ms/step - loss: 1.8354 - mae: 2.2878\n",
            "Epoch 347/500\n",
            "10/10 [==============================] - 0s 26ms/step - loss: 1.8358 - mae: 2.2882\n",
            "Epoch 348/500\n",
            "10/10 [==============================] - 0s 29ms/step - loss: 1.8360 - mae: 2.2884\n",
            "Epoch 349/500\n",
            "10/10 [==============================] - 0s 29ms/step - loss: 1.8372 - mae: 2.2897\n",
            "Epoch 350/500\n",
            "10/10 [==============================] - 0s 26ms/step - loss: 1.8358 - mae: 2.2882\n",
            "Epoch 351/500\n",
            "10/10 [==============================] - 0s 28ms/step - loss: 1.8353 - mae: 2.2878\n",
            "Epoch 352/500\n",
            "10/10 [==============================] - 0s 28ms/step - loss: 1.8347 - mae: 2.2871\n",
            "Epoch 353/500\n",
            "10/10 [==============================] - 0s 27ms/step - loss: 1.8346 - mae: 2.2869\n",
            "Epoch 354/500\n",
            "10/10 [==============================] - 0s 27ms/step - loss: 1.8358 - mae: 2.2881\n",
            "Epoch 355/500\n",
            "10/10 [==============================] - 0s 34ms/step - loss: 1.8343 - mae: 2.2867\n",
            "Epoch 356/500\n",
            "10/10 [==============================] - 0s 28ms/step - loss: 1.8368 - mae: 2.2893\n",
            "Epoch 357/500\n",
            "10/10 [==============================] - 0s 28ms/step - loss: 1.8340 - mae: 2.2864\n",
            "Epoch 358/500\n",
            "10/10 [==============================] - 0s 28ms/step - loss: 1.8342 - mae: 2.2864\n",
            "Epoch 359/500\n",
            "10/10 [==============================] - 0s 31ms/step - loss: 1.8341 - mae: 2.2864\n",
            "Epoch 360/500\n",
            "10/10 [==============================] - 0s 27ms/step - loss: 1.8337 - mae: 2.2860\n",
            "Epoch 361/500\n",
            "10/10 [==============================] - 0s 27ms/step - loss: 1.8339 - mae: 2.2863\n",
            "Epoch 362/500\n",
            "10/10 [==============================] - 0s 27ms/step - loss: 1.8336 - mae: 2.2860\n",
            "Epoch 363/500\n",
            "10/10 [==============================] - 0s 28ms/step - loss: 1.8363 - mae: 2.2887\n",
            "Epoch 364/500\n",
            "10/10 [==============================] - 0s 29ms/step - loss: 1.8328 - mae: 2.2850\n",
            "Epoch 365/500\n",
            "10/10 [==============================] - 0s 28ms/step - loss: 1.8350 - mae: 2.2874\n",
            "Epoch 366/500\n",
            "10/10 [==============================] - 0s 27ms/step - loss: 1.8349 - mae: 2.2872\n",
            "Epoch 367/500\n",
            "10/10 [==============================] - 0s 28ms/step - loss: 1.8338 - mae: 2.2862\n",
            "Epoch 368/500\n",
            "10/10 [==============================] - 0s 27ms/step - loss: 1.8338 - mae: 2.2861\n",
            "Epoch 369/500\n",
            "10/10 [==============================] - 0s 28ms/step - loss: 1.8331 - mae: 2.2854\n",
            "Epoch 370/500\n",
            "10/10 [==============================] - 0s 27ms/step - loss: 1.8326 - mae: 2.2849\n",
            "Epoch 371/500\n",
            "10/10 [==============================] - 0s 29ms/step - loss: 1.8323 - mae: 2.2846\n",
            "Epoch 372/500\n",
            "10/10 [==============================] - 0s 28ms/step - loss: 1.8341 - mae: 2.2866\n",
            "Epoch 373/500\n",
            "10/10 [==============================] - 0s 27ms/step - loss: 1.8333 - mae: 2.2857\n",
            "Epoch 374/500\n",
            "10/10 [==============================] - 0s 28ms/step - loss: 1.8318 - mae: 2.2841\n",
            "Epoch 375/500\n",
            "10/10 [==============================] - 0s 36ms/step - loss: 1.8336 - mae: 2.2859\n",
            "Epoch 376/500\n",
            "10/10 [==============================] - 0s 30ms/step - loss: 1.8325 - mae: 2.2846\n",
            "Epoch 377/500\n",
            "10/10 [==============================] - 0s 27ms/step - loss: 1.8329 - mae: 2.2852\n",
            "Epoch 378/500\n",
            "10/10 [==============================] - 0s 27ms/step - loss: 1.8319 - mae: 2.2842\n",
            "Epoch 379/500\n",
            "10/10 [==============================] - 0s 27ms/step - loss: 1.8326 - mae: 2.2848\n",
            "Epoch 380/500\n",
            "10/10 [==============================] - 0s 29ms/step - loss: 1.8320 - mae: 2.2844\n",
            "Epoch 381/500\n",
            "10/10 [==============================] - 0s 28ms/step - loss: 1.8324 - mae: 2.2846\n",
            "Epoch 382/500\n",
            "10/10 [==============================] - 0s 29ms/step - loss: 1.8310 - mae: 2.2832\n",
            "Epoch 383/500\n",
            "10/10 [==============================] - 0s 27ms/step - loss: 1.8328 - mae: 2.2852\n",
            "Epoch 384/500\n",
            "10/10 [==============================] - 0s 29ms/step - loss: 1.8320 - mae: 2.2843\n",
            "Epoch 385/500\n",
            "10/10 [==============================] - 0s 27ms/step - loss: 1.8308 - mae: 2.2830\n",
            "Epoch 386/500\n",
            "10/10 [==============================] - 0s 29ms/step - loss: 1.8308 - mae: 2.2829\n",
            "Epoch 387/500\n",
            "10/10 [==============================] - 0s 31ms/step - loss: 1.8308 - mae: 2.2831\n",
            "Epoch 388/500\n",
            "10/10 [==============================] - 0s 30ms/step - loss: 1.8334 - mae: 2.2857\n",
            "Epoch 389/500\n",
            "10/10 [==============================] - 0s 27ms/step - loss: 1.8313 - mae: 2.2835\n",
            "Epoch 390/500\n",
            "10/10 [==============================] - 0s 29ms/step - loss: 1.8314 - mae: 2.2837\n",
            "Epoch 391/500\n",
            "10/10 [==============================] - 0s 30ms/step - loss: 1.8320 - mae: 2.2843\n",
            "Epoch 392/500\n",
            "10/10 [==============================] - 0s 27ms/step - loss: 1.8302 - mae: 2.2824\n",
            "Epoch 393/500\n",
            "10/10 [==============================] - 0s 28ms/step - loss: 1.8305 - mae: 2.2828\n",
            "Epoch 394/500\n",
            "10/10 [==============================] - 0s 28ms/step - loss: 1.8311 - mae: 2.2832\n",
            "Epoch 395/500\n",
            "10/10 [==============================] - 0s 29ms/step - loss: 1.8300 - mae: 2.2822\n",
            "Epoch 396/500\n",
            "10/10 [==============================] - 0s 30ms/step - loss: 1.8306 - mae: 2.2828\n",
            "Epoch 397/500\n",
            "10/10 [==============================] - 0s 29ms/step - loss: 1.8298 - mae: 2.2819\n",
            "Epoch 398/500\n",
            "10/10 [==============================] - 0s 30ms/step - loss: 1.8307 - mae: 2.2830\n",
            "Epoch 399/500\n",
            "10/10 [==============================] - 0s 30ms/step - loss: 1.8305 - mae: 2.2826\n",
            "Epoch 400/500\n",
            "10/10 [==============================] - 0s 28ms/step - loss: 1.8309 - mae: 2.2832\n",
            "Epoch 401/500\n",
            "10/10 [==============================] - 0s 36ms/step - loss: 1.8306 - mae: 2.2828\n",
            "Epoch 402/500\n",
            "10/10 [==============================] - 0s 29ms/step - loss: 1.8308 - mae: 2.2830\n",
            "Epoch 403/500\n",
            "10/10 [==============================] - 0s 28ms/step - loss: 1.8298 - mae: 2.2821\n",
            "Epoch 404/500\n",
            "10/10 [==============================] - 0s 32ms/step - loss: 1.8297 - mae: 2.2820\n",
            "Epoch 405/500\n",
            "10/10 [==============================] - 0s 27ms/step - loss: 1.8304 - mae: 2.2827\n",
            "Epoch 406/500\n",
            "10/10 [==============================] - 0s 28ms/step - loss: 1.8290 - mae: 2.2811\n",
            "Epoch 407/500\n",
            "10/10 [==============================] - 0s 27ms/step - loss: 1.8293 - mae: 2.2815\n",
            "Epoch 408/500\n",
            "10/10 [==============================] - 0s 28ms/step - loss: 1.8291 - mae: 2.2813\n",
            "Epoch 409/500\n",
            "10/10 [==============================] - 0s 28ms/step - loss: 1.8287 - mae: 2.2809\n",
            "Epoch 410/500\n",
            "10/10 [==============================] - 0s 29ms/step - loss: 1.8291 - mae: 2.2813\n",
            "Epoch 411/500\n",
            "10/10 [==============================] - 0s 26ms/step - loss: 1.8304 - mae: 2.2825\n",
            "Epoch 412/500\n",
            "10/10 [==============================] - 0s 30ms/step - loss: 1.8289 - mae: 2.2811\n",
            "Epoch 413/500\n",
            "10/10 [==============================] - 0s 30ms/step - loss: 1.8308 - mae: 2.2831\n",
            "Epoch 414/500\n",
            "10/10 [==============================] - 0s 29ms/step - loss: 1.8288 - mae: 2.2810\n",
            "Epoch 415/500\n",
            "10/10 [==============================] - 0s 28ms/step - loss: 1.8293 - mae: 2.2815\n",
            "Epoch 416/500\n",
            "10/10 [==============================] - 0s 29ms/step - loss: 1.8291 - mae: 2.2813\n",
            "Epoch 417/500\n",
            "10/10 [==============================] - 0s 30ms/step - loss: 1.8283 - mae: 2.2805\n",
            "Epoch 418/500\n",
            "10/10 [==============================] - 0s 32ms/step - loss: 1.8284 - mae: 2.2806\n",
            "Epoch 419/500\n",
            "10/10 [==============================] - 0s 28ms/step - loss: 1.8280 - mae: 2.2801\n",
            "Epoch 420/500\n",
            "10/10 [==============================] - 0s 36ms/step - loss: 1.8290 - mae: 2.2812\n",
            "Epoch 421/500\n",
            "10/10 [==============================] - 0s 36ms/step - loss: 1.8296 - mae: 2.2816\n",
            "Epoch 422/500\n",
            "10/10 [==============================] - 0s 38ms/step - loss: 1.8281 - mae: 2.2803\n",
            "Epoch 423/500\n",
            "10/10 [==============================] - 0s 30ms/step - loss: 1.8283 - mae: 2.2804\n",
            "Epoch 424/500\n",
            "10/10 [==============================] - 0s 37ms/step - loss: 1.8276 - mae: 2.2797\n",
            "Epoch 425/500\n",
            "10/10 [==============================] - 0s 32ms/step - loss: 1.8288 - mae: 2.2811\n",
            "Epoch 426/500\n",
            "10/10 [==============================] - 0s 29ms/step - loss: 1.8273 - mae: 2.2795\n",
            "Epoch 427/500\n",
            "10/10 [==============================] - 0s 32ms/step - loss: 1.8286 - mae: 2.2807\n",
            "Epoch 428/500\n",
            "10/10 [==============================] - 0s 38ms/step - loss: 1.8278 - mae: 2.2801\n",
            "Epoch 429/500\n",
            "10/10 [==============================] - 0s 27ms/step - loss: 1.8278 - mae: 2.2800\n",
            "Epoch 430/500\n",
            "10/10 [==============================] - 0s 29ms/step - loss: 1.8283 - mae: 2.2805\n",
            "Epoch 431/500\n",
            "10/10 [==============================] - 0s 28ms/step - loss: 1.8279 - mae: 2.2800\n",
            "Epoch 432/500\n",
            "10/10 [==============================] - 0s 30ms/step - loss: 1.8273 - mae: 2.2794\n",
            "Epoch 433/500\n",
            "10/10 [==============================] - 0s 27ms/step - loss: 1.8276 - mae: 2.2797\n",
            "Epoch 434/500\n",
            "10/10 [==============================] - 0s 30ms/step - loss: 1.8275 - mae: 2.2798\n",
            "Epoch 435/500\n",
            "10/10 [==============================] - 0s 28ms/step - loss: 1.8268 - mae: 2.2788\n",
            "Epoch 436/500\n",
            "10/10 [==============================] - 0s 35ms/step - loss: 1.8276 - mae: 2.2798\n",
            "Epoch 437/500\n",
            "10/10 [==============================] - 0s 31ms/step - loss: 1.8285 - mae: 2.2807\n",
            "Epoch 438/500\n",
            "10/10 [==============================] - 0s 37ms/step - loss: 1.8279 - mae: 2.2801\n",
            "Epoch 439/500\n",
            "10/10 [==============================] - 0s 30ms/step - loss: 1.8285 - mae: 2.2807\n",
            "Epoch 440/500\n",
            "10/10 [==============================] - 0s 29ms/step - loss: 1.8297 - mae: 2.2817\n",
            "Epoch 441/500\n",
            "10/10 [==============================] - 0s 32ms/step - loss: 1.8263 - mae: 2.2785\n",
            "Epoch 442/500\n",
            "10/10 [==============================] - 0s 29ms/step - loss: 1.8289 - mae: 2.2812\n",
            "Epoch 443/500\n",
            "10/10 [==============================] - 0s 30ms/step - loss: 1.8285 - mae: 2.2807\n",
            "Epoch 444/500\n",
            "10/10 [==============================] - 0s 27ms/step - loss: 1.8265 - mae: 2.2787\n",
            "Epoch 445/500\n",
            "10/10 [==============================] - 0s 31ms/step - loss: 1.8312 - mae: 2.2835\n",
            "Epoch 446/500\n",
            "10/10 [==============================] - 0s 27ms/step - loss: 1.8262 - mae: 2.2783\n",
            "Epoch 447/500\n",
            "10/10 [==============================] - 0s 27ms/step - loss: 1.8269 - mae: 2.2791\n",
            "Epoch 448/500\n",
            "10/10 [==============================] - 0s 34ms/step - loss: 1.8261 - mae: 2.2783\n",
            "Epoch 449/500\n",
            "10/10 [==============================] - 0s 33ms/step - loss: 1.8272 - mae: 2.2793\n",
            "Epoch 450/500\n",
            "10/10 [==============================] - 0s 29ms/step - loss: 1.8260 - mae: 2.2781\n",
            "Epoch 451/500\n",
            "10/10 [==============================] - 0s 30ms/step - loss: 1.8262 - mae: 2.2784\n",
            "Epoch 452/500\n",
            "10/10 [==============================] - 0s 26ms/step - loss: 1.8270 - mae: 2.2791\n",
            "Epoch 453/500\n",
            "10/10 [==============================] - 0s 29ms/step - loss: 1.8257 - mae: 2.2778\n",
            "Epoch 454/500\n",
            "10/10 [==============================] - 0s 28ms/step - loss: 1.8250 - mae: 2.2770\n",
            "Epoch 455/500\n",
            "10/10 [==============================] - 0s 28ms/step - loss: 1.8280 - mae: 2.2803\n",
            "Epoch 456/500\n",
            "10/10 [==============================] - 0s 27ms/step - loss: 1.8254 - mae: 2.2775\n",
            "Epoch 457/500\n",
            "10/10 [==============================] - 0s 30ms/step - loss: 1.8257 - mae: 2.2776\n",
            "Epoch 458/500\n",
            "10/10 [==============================] - 0s 30ms/step - loss: 1.8261 - mae: 2.2782\n",
            "Epoch 459/500\n",
            "10/10 [==============================] - 0s 28ms/step - loss: 1.8258 - mae: 2.2779\n",
            "Epoch 460/500\n",
            "10/10 [==============================] - 0s 29ms/step - loss: 1.8256 - mae: 2.2776\n",
            "Epoch 461/500\n",
            "10/10 [==============================] - 0s 27ms/step - loss: 1.8250 - mae: 2.2771\n",
            "Epoch 462/500\n",
            "10/10 [==============================] - 0s 33ms/step - loss: 1.8266 - mae: 2.2787\n",
            "Epoch 463/500\n",
            "10/10 [==============================] - 0s 30ms/step - loss: 1.8258 - mae: 2.2780\n",
            "Epoch 464/500\n",
            "10/10 [==============================] - 0s 30ms/step - loss: 1.8261 - mae: 2.2781\n",
            "Epoch 465/500\n",
            "10/10 [==============================] - 0s 37ms/step - loss: 1.8274 - mae: 2.2797\n",
            "Epoch 466/500\n",
            "10/10 [==============================] - 0s 34ms/step - loss: 1.8256 - mae: 2.2776\n",
            "Epoch 467/500\n",
            "10/10 [==============================] - 0s 27ms/step - loss: 1.8248 - mae: 2.2768\n",
            "Epoch 468/500\n",
            "10/10 [==============================] - 0s 30ms/step - loss: 1.8249 - mae: 2.2770\n",
            "Epoch 469/500\n",
            "10/10 [==============================] - 0s 28ms/step - loss: 1.8255 - mae: 2.2776\n",
            "Epoch 470/500\n",
            "10/10 [==============================] - 0s 28ms/step - loss: 1.8246 - mae: 2.2767\n",
            "Epoch 471/500\n",
            "10/10 [==============================] - 0s 29ms/step - loss: 1.8248 - mae: 2.2769\n",
            "Epoch 472/500\n",
            "10/10 [==============================] - 0s 30ms/step - loss: 1.8245 - mae: 2.2766\n",
            "Epoch 473/500\n",
            "10/10 [==============================] - 0s 26ms/step - loss: 1.8250 - mae: 2.2771\n",
            "Epoch 474/500\n",
            "10/10 [==============================] - 0s 34ms/step - loss: 1.8255 - mae: 2.2776\n",
            "Epoch 475/500\n",
            "10/10 [==============================] - 0s 27ms/step - loss: 1.8294 - mae: 2.2817\n",
            "Epoch 476/500\n",
            "10/10 [==============================] - 0s 36ms/step - loss: 1.8242 - mae: 2.2764\n",
            "Epoch 477/500\n",
            "10/10 [==============================] - 0s 35ms/step - loss: 1.8247 - mae: 2.2769\n",
            "Epoch 478/500\n",
            "10/10 [==============================] - 0s 35ms/step - loss: 1.8251 - mae: 2.2771\n",
            "Epoch 479/500\n",
            "10/10 [==============================] - 0s 34ms/step - loss: 1.8245 - mae: 2.2766\n",
            "Epoch 480/500\n",
            "10/10 [==============================] - 0s 34ms/step - loss: 1.8241 - mae: 2.2762\n",
            "Epoch 481/500\n",
            "10/10 [==============================] - 0s 30ms/step - loss: 1.8247 - mae: 2.2768\n",
            "Epoch 482/500\n",
            "10/10 [==============================] - 0s 28ms/step - loss: 1.8237 - mae: 2.2757\n",
            "Epoch 483/500\n",
            "10/10 [==============================] - 0s 28ms/step - loss: 1.8251 - mae: 2.2773\n",
            "Epoch 484/500\n",
            "10/10 [==============================] - 0s 28ms/step - loss: 1.8239 - mae: 2.2760\n",
            "Epoch 485/500\n",
            "10/10 [==============================] - 0s 38ms/step - loss: 1.8239 - mae: 2.2760\n",
            "Epoch 486/500\n",
            "10/10 [==============================] - 0s 34ms/step - loss: 1.8235 - mae: 2.2755\n",
            "Epoch 487/500\n",
            "10/10 [==============================] - 0s 27ms/step - loss: 1.8240 - mae: 2.2761\n",
            "Epoch 488/500\n",
            "10/10 [==============================] - 0s 29ms/step - loss: 1.8237 - mae: 2.2758\n",
            "Epoch 489/500\n",
            "10/10 [==============================] - 0s 38ms/step - loss: 1.8240 - mae: 2.2761\n",
            "Epoch 490/500\n",
            "10/10 [==============================] - 0s 37ms/step - loss: 1.8232 - mae: 2.2753\n",
            "Epoch 491/500\n",
            "10/10 [==============================] - 0s 32ms/step - loss: 1.8252 - mae: 2.2774\n",
            "Epoch 492/500\n",
            "10/10 [==============================] - 0s 29ms/step - loss: 1.8235 - mae: 2.2756\n",
            "Epoch 493/500\n",
            "10/10 [==============================] - 0s 27ms/step - loss: 1.8265 - mae: 2.2788\n",
            "Epoch 494/500\n",
            "10/10 [==============================] - 0s 27ms/step - loss: 1.8233 - mae: 2.2753\n",
            "Epoch 495/500\n",
            "10/10 [==============================] - 0s 29ms/step - loss: 1.8249 - mae: 2.2771\n",
            "Epoch 496/500\n",
            "10/10 [==============================] - 0s 29ms/step - loss: 1.8282 - mae: 2.2806\n",
            "Epoch 497/500\n",
            "10/10 [==============================] - 0s 35ms/step - loss: 1.8250 - mae: 2.2772\n",
            "Epoch 498/500\n",
            "10/10 [==============================] - 0s 37ms/step - loss: 1.8270 - mae: 2.2790\n",
            "Epoch 499/500\n",
            "10/10 [==============================] - 0s 42ms/step - loss: 1.8231 - mae: 2.2752\n",
            "Epoch 500/500\n",
            "10/10 [==============================] - 0s 31ms/step - loss: 1.8241 - mae: 2.2762\n"
          ],
          "name": "stdout"
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "GaC6NNMRp0lb"
      },
      "source": [
        "rnn_forecast = model_forecast(model, series[..., np.newaxis], window_size)\n",
        "rnn_forecast = rnn_forecast[split_time - window_size:-1,0]"
      ],
      "execution_count": 32,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "TmYZ9A5uu5sA",
        "outputId": "24df8afa-2806-4f08-f5c8-2a575d8afee4",
        "colab": {
          "base_uri": "https://localhost:8080/"
        }
      },
      "source": [
        "rnn_forecast.shape"
      ],
      "execution_count": 33,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "(1150,)"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 33
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "pYhVygv8vKfd",
        "outputId": "7501562a-709f-4d5b-9205-c28551de5b83",
        "colab": {
          "base_uri": "https://localhost:8080/"
        }
      },
      "source": [
        "x_valid.shape"
      ],
      "execution_count": 34,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "(1150,)"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 34
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 389
        },
        "id": "izy6wl2S9d-2",
        "outputId": "463a4001-0b5f-4b07-8be2-0a7a54b236fc"
      },
      "source": [
        "plt.figure(figsize=(10, 6))\n",
        "plot_series(time_valid, x_valid)\n",
        "plot_series(time_valid, rnn_forecast)\n",
        "\n",
        "# EXPECTED OUTPUT. PLOT SHOULD SHOW PROJECTIONS FOLLOWING ORIGINAL DATA CLOSELY"
      ],
      "execution_count": 35,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "image/png": "\n",
            "text/plain": [
              "<Figure size 720x432 with 1 Axes>"
            ]
          },
          "metadata": {
            "tags": [],
            "needs_background": "light"
          }
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "jTjzFca7u43u"
      },
      "source": [
        ""
      ],
      "execution_count": 35,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "13XrorC5wQoE",
        "outputId": "c662858f-73c5-4113-f59e-a311509f1cbe"
      },
      "source": [
        "tf.keras.metrics.mean_absolute_error(x_valid, rnn_forecast).numpy()\n",
        "\n",
        "# EXPECTED OUTPUT MAE < 2 -- I GOT 1.789626"
      ],
      "execution_count": 36,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "2.4367778"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 36
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "AOVzQXxCwkzP",
        "outputId": "43f32c64-33ea-45b1-ac5b-af7182d922c9"
      },
      "source": [
        "print(rnn_forecast)\n",
        "# EXPECTED OUTPUT -- ARRAY OF VALUES IN THE LOW TEENS"
      ],
      "execution_count": 37,
      "outputs": [
        {
          "output_type": "stream",
          "text": [
            "[12.056806 11.552685 11.412182 ... 13.495702 14.146212 14.1157  ]\n"
          ],
          "name": "stdout"
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "9KM7ym0gvQ1o"
      },
      "source": [
        ""
      ],
      "execution_count": null,
      "outputs": []
    }
  ]
}